<?xml version="1.0"?>
<!-- 
*****************************************************************************************
*
*        =============================================
*           Krishi Bot (KB) Theme (eYRC 2022-23)
*        =============================================
*
*
*  Filename:			ebot.gazebo
*  Created:				2021
*  Last Modified:	27/09/2022
*  Modified by:   Amit
*  Author:				e-Yantra Team
*  
***************************************************************************************** 
-->

<robot name="ebot" 
  xmlns:xacro="http://www.ros.org/wiki/xacro">
  <gazebo reference="ebot_base">
    <sensor name='collision_sensor' type='contact'>
      <contact>
        <collision>ebot_base_fixed_joint_lump__basket_collision_13</collision>
        <collision>ebot_base_fixed_joint_lump__trolley_collision_12</collision>
      </contact>
      <plugin name="collision_sensor" filename="libgazebo_collision_sensor.so">
        <rosDebugLevel>na</rosDebugLevel>
        <topicName>/gazebo/base_collision</topicName>
        <updateRate>10.0</updateRate>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="wheel_drive_controller" filename="libgazebo_ros_diff_drive.so">

      <!-- wheels -->
      <num_wheel_pairs>2</num_wheel_pairs>
      <left_joint>FWLJ</left_joint>
      <left_joint>RWLJ</left_joint>
      <right_joint>FWRJ</right_joint>
      <right_joint>RWRJ</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.4</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      <max_wheel_torque>100.0</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>

      <!-- odometry  --> 
      <odometry_source>1</odometry_source>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>ebot_base_link</robot_base_frame>

      <!-- topic & re remappings -->
      <ros>
        <namespace>/</namespace>
        <remapping>/cmd_vel:=cmd_vel</remapping>
        <remapping>/odom:=odom</remapping>
      </ros>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <update_rate>100.0</update_rate>
    </plugin>
  </gazebo>

  <gazebo reference="FWL">
    <material>Gazebo/Black</material>
  </gazebo>
    <gazebo reference="FWR">
    <material>Gazebo/Black</material>
  </gazebo>
    <gazebo reference="RWL">
    <material>Gazebo/Black</material>
  </gazebo>
    <gazebo reference="RWR">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- <gazebo reference="ebot_base">
    <material>Gazebo/White</material>
  </gazebo> -->

  <gazebo reference="trolley">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- <gazebo reference="basket">
    <material>Gazebo/Blue</material>
  </gazebo> -->

   <gazebo reference="laser">
    <material>Gazebo/Black</material>
  </gazebo>

    <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
  </gazebo>


    <gazebo reference="sjcam_link">
    <material>Gazebo/Black</material>
  </gazebo>


	<gazebo reference="tomato_gripper_r">
	    <implicitSpringDamper>1</implicitSpringDamper>
	    <mu1>100000</mu1>
	    <mu2>100000</mu2>
	    <kp>100000000.0</kp>
	    <kd>1.0</kd>
	<maxVel>0.0</maxVel>
	<minDepth>0.001</minDepth>
	</gazebo> 

	<gazebo reference="tomato_gripper_l">
	    <implicitSpringDamper>1</implicitSpringDamper>
	    <mu1>100000</mu1>
	    <mu2>100000</mu2>
	    <kp>100000000.0</kp>
	    <kd>1.0</kd>
	<maxVel>0.0</maxVel>
	<minDepth>0.001</minDepth>
	</gazebo> 

    <link name="ebot_end_effector">
      <gravity>0</gravity>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.01"/>
        </geometry>
        <material name="transparent">
          <color rgba="0 0 0 0"/>
        </material>
      </visual>
      <inertial>
        <origin rpy="0 0 0" xyz="0.000000 0.000000 0.000000"/>
        <mass value="0.0001"/>
        <inertia ixx="1e-08" ixy="0" ixz="0" iyy="1e-08" iyz="0" izz="1e-08"/>
      </inertial>
    </link>
    <joint name="ebot_end_effector_joint" type="revolute">
      <parent link="ebot_base" />
      <child link="ebot_end_effector" />
      <origin rpy="0 0 0" xyz="-0.45 0.0 0.40" />
      <limit effort="50" velocity="1.0" lower="0" upper="0" />
    </joint>
  <gazebo>
    <!-- <plugin name="gazebo_ros_vacuum_gripper" filename="/home/architter/ws_eyrc_23_24_kb/install/gazebo_plugins/lib/libgazebo_ros_vacuum_gripper.so"> -->
    <plugin name="gazebo_ros_vacuum_gripper" filename="libgazebo_ros_vacuum_gripper.so">
      <robotNamespace>/ebot/vacuum_gripper</robotNamespace>
      <topicName>vacuum_grasp</topicName>
      <link_name>ebot_end_effector</link_name>
        <fixed>moon_surface</fixed>
        <!-- <fixed>rack</fixed> -->
          <max_distance>1.0</max_distance>
    </plugin>
  </gazebo>


 <!--  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
 -->



<!-- lidar sensor -->

<!-- using GPU -->
 <!--   <gazebo reference="laser">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle>
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/ebot/laser/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

<!-- using CPU 0.05 to 8m -->
    <gazebo reference="laser">
        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <min_angle>-1.57</min_angle>
                        <max_angle>1.57</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.2</min>
                    <max>8</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser</frame_name>
            </plugin>
        </sensor>
    </gazebo>


<!-- intel realsense1 -->
 <!--  <gazebo reference="camera_link">
    <sensor type="depth" name="intelrealsenseD435i">
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="intelrealsense" filename="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_depth_frame</frameName>
        <imageTopicName>/camera/color/image_raw</imageTopicName>
        <depthImageTopicName>/camera/depth/image_rect_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.2</pointCloudCutoff>
         <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
-->


<!--10  ultrasonic sensor -->


<!-- xacro for ultrasonic sensor using GPU -->
<!-- 
<xacro:macro name="ultrasonic_sensor" params="name">
    <gazebo reference="${name}">
    <sensor type="gpu_ray" name="${name}">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-0.1309</min_angle>
            <max_angle>0.1309</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.03</min>
          <max>4.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="ultrasonic_sensor" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/ebot/${name}/scan</topicName>
        <frameName>${name}_ultrasonic_sensor</frameName>
      </plugin>
    </sensor>
  </gazebo>
</xacro:macro>-->


<!-- using CPU -->
<!-- <xacro:macro name="ultrasonic_sensor" params="name">
    <gazebo reference="${name}">

    <sensor type="ray" name="head_rplidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-0.1309</min_angle>
            <max_angle>0.1309</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.03</min>
          <max>4.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="ultrasonic_sensor" filename="libgazebo_ros_laser.so">
        <topicName>/ebot/${name}/scan</topicName>
        <frameName>${name}_ultrasonic_sensor</frameName>
      </plugin>
    </sensor>
  </gazebo> 
  </xacro:macro> 

<xacro:ultrasonic_sensor name="FUS1"/> 
<xacro:ultrasonic_sensor name="FUS2"/> 
<xacro:ultrasonic_sensor name="FUS3"/> 
<xacro:ultrasonic_sensor name="FUS4"/> 
<xacro:ultrasonic_sensor name="RUS5"/> 
<xacro:ultrasonic_sensor name="RUS6"/> 
<xacro:ultrasonic_sensor name="RHUS7"/> 
<xacro:ultrasonic_sensor name="RHUS9"/> 
<xacro:ultrasonic_sensor name="LHUS9"/> 
<xacro:ultrasonic_sensor name="LHUS10"/> -->

<!-- imu -->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <remapping>~/out:=/imu</remapping>
        </ros>
        <!-- <topicName>imu</topicName> -->
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- camera -->
  <gazebo reference="sjcam_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>ebot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>



</robot>
